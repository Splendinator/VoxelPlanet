#pragma once

#include "DomMath/Vec2.h"

class Noise
{
public:

	static float perlinNoise2D(float x, float y)
	{
		const int intX = (int)(x);
		const int intY = (int)(y);

		int X = intX & 255;                 
		int Y = intY & 255;                 

		x -= intX;                             
		y -= intY;                              

		float u = fade(x);
		float v = fade(y);

		const int A = p[X] + Y;
		const int AA = p[A] + X;
		const int B = p[Y] + X;
		const int BA = p[B] + Y;

		

		return 1.0f;
	}

private:

	static constexpr char p[256] =
	{
	-94, -81, -90,  17,  28, -49, 127, -63, 103, -34,  92, -62,  62,  72,  13, -25, -16, -53, -20, -73, -91,  89,  68, -86,  40,  -6,
	-24,  18, 111, 124, -37, -71,  20, 122, -79,  -5, -107,  36, 125, -38,  88,  -4, -120, -46, -21, 106,   8,  42, 117, 101, -125,
	-93,  14, -123,  93, -55,  58,  12,   9,  55,   4, 119,  73, -15,  38, -17,  79,  57, -68,  91, -80,  71,  69, -14, 105,  63, -23,
	-58, -39, -66,  48,  27, -56, -72, -65,   5,  33,  30,  15, -128, -106,  -9, -61,  66, 102,  22, -48,  49,  -1,   0,  60,  67,  81,
	-70, -88, -119,  82, -69,   7, 123, -52,  95, -43, -110, -112, -116, -64, -27, -18, 108,  74,  94, 109,  45,  39, -122, -11,   3,
	23,  90, -22, -12, 114,  56,  85, -40, -95, -101,  87,  51,  -8,  -3, -60,   2,  46, 116,  97,  50, 107, -102, -114,  77, -113,
	29, 112, -29, -85, -10,  78, -19, -30,  10,  86,  47, -103,  80, -117, -121, -59,  11, -54, -115,  19, -76, -99,  99, -78,  43,
	32,  16, -127,  35, -89,  76,  26, -92, -104, -32, 104,  84, -84, -105, -118, -83,  44, -31, -109, -28, 121,  54,  -2,  25,  75,
	24, -67, -47,  52, 126, -98, 113,  70, -108, -74,  41, -87, 110, -26, -13, -50,  21, -96, -41, -126, -82, -111,  -7, -33, 118, -44,
	-75, -77, -36,  61,  31, -97,  98,   6,  64, -35,  83,  59,   1, 115,  53,  96,  37, -42,  34, 120, -124, -45, -100, -57,  65, -51, 100
	};

	static float fade(float t) { return t * t * t * (t * (t * 6 - 15) + 10); }
	static float lerp(float t, float a, float b) { return a + t * (b - a); }
};
